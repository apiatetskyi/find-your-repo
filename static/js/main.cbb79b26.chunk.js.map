{"version":3,"sources":["serviceWorker.js","context/online-context.js","api/github.js","settings.js","utils.js","hooks/useFetch.js","hooks/useUrlParams.js","hooks/useCache.js","components/SearchBar.js","components/Select.js","components/NetworkNotification.js","components/Sorting.js","components/RepositoryCard.js","components/RepositoryList.js","components/SearchResult.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","OnlineContext","React","createContext","isOnline","onLine","OnlineContextProvider","children","useState","setIsOnline","useEffect","addEventListener","onNetworkStatusChange","removeEventListener","event","type","Provider","value","github","axios","create","baseURL","process","interceptors","request","use","params","per_page","defaultUrlParam","sort","order","sortingOptions","label","searchParamsToObject","urlSearchParams","entries","reduce","key","getPagesAmount","items","perPage","Math","ceil","min","setError","status","mapStatusToError","403","422","default","useFetch","api","path","loading","setLoading","response","setResponse","errorMessage","setErrorMessage","fetchData","useCallback","a","get","ReactDOM","unstable_batchedUpdates","data","useUrlParams","defaultParams","URLSearchParams","search","setParams","updateParams","prevParams","Object","keys","every","param","isSameParams","newParams","queryString","history","pushState","pathname","toString","useCache","name","hasCache","setCache","addCache","caches","open","cache","length","delete","put","Response","JSON","stringify","getCache","cachedResponse","json","getAllCaches","SearchBar","memo","onSubmit","searchPhrase","setSearchPhrase","noValidate","autoComplete","preventDefault","Grid","container","spacing","item","xs","sm","md","TextField","id","fullWidth","variant","onChange","target","alignItems","Button","color","size","endIcon","initailLabelId","Select","options","defaultOption","labelId","FormControl","InputLabel","shrink","defaultValue","displayEmpty","map","MenuItem","useStyle","makeStyles","theme","alert","marginBottom","NetworkNotification","classes","useContext","Alert","className","severity","Sorting","anchorEl","setAnchorEl","setLabel","aria-haspopup","onClick","currentTarget","Menu","keepMounted","onClose","option","onSelect","useStyles","root","position","content","padding","stars","bottom","right","display","maxWidth","typography","pxToRem","fontSize","starsIcon","marginRight","RepositoryCard","repository","url","html_url","owner","stargazers_count","Card","CardContent","Typography","noWrap","login","CardActions","href","rel","RepositoryList","repositories","repo","lg","sectionHeading","fontWeight","fontWeightBold","pagination","marginTop","sorting","float","fontWeightRegular","SearchResult","onPaging","onSorting","currentPage","pageCount","total_count","Pagination","page","count","parseInt","h1","paper","section","zIndex","drawer","App","cachedRequests","setCachedRequests","searchQuery","searchParams","paramsToQueryString","q","fetchedData","requests","URL","query","Container","Paper","Backdrop","CircularProgress","origin","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","render","document","querySelector"],"mappings":"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","file":"static/js/main.cbb79b26.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport const OnlineContext = React.createContext({\n  isOnline: window.navigator.onLine,\n});\n\nconst OnlineContextProvider = ({ children }) => {\n  const [isOnline, setIsOnline] = useState(window.navigator.onLine);\n\n  useEffect(() => {\n    if (window.navigator && window.navigator.onLine) {\n      setIsOnline(window.navigator.onLine);\n\n      window.addEventListener(\"online\", onNetworkStatusChange);\n      window.addEventListener(\"offline\", onNetworkStatusChange);\n\n      return () => {\n        window.removeEventListener(\"online\", onNetworkStatusChange);\n        window.removeEventListener(\"offline\", onNetworkStatusChange);\n      };\n    }\n  }, []);\n\n  const onNetworkStatusChange = (event) => {\n    setIsOnline(event.type === \"online\");\n  };\n\n  return (\n    <OnlineContext.Provider value={{ isOnline }}>\n      {children}\n    </OnlineContext.Provider>\n  );\n};\n\nexport default OnlineContextProvider;\n","import axios from \"axios\";\n\nexport const DEFAULT_PER_PAGE = 30;\nexport const MAX_SEARCH_RESULTS = 1000;\n\n/**\n * Create configured instance of axios for github api.\n */\nconst github = axios.create({\n  baseURL: process.env.REACT_APP_GITHUB_API,\n});\n\ngithub.interceptors.request.use((config) => {\n  config.params = config.params || {};\n  config.params.per_page = DEFAULT_PER_PAGE;\n\n  return config;\n});\n\nexport default github;\n","import { DEFAULT_PER_PAGE } from \"./api/github\";\n\nexport const SEARCH_CACHE = \"search-cache\";\n\nexport const defaultUrlParam = {\n  per_page: DEFAULT_PER_PAGE,\n  sort: \"stars\",\n  order: \"desc\",\n};\n\nexport const sortingOptions = [\n  { label: \"DESC\", order: \"desc\" },\n  { label: \"ASC\", order: \"asc\" },\n];\n","import { MAX_SEARCH_RESULTS } from \"./api/github\";\n\nexport const getQueryParam = (param) => {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  return urlParams.get(param);\n};\n\nexport const paramsToQueryString = (params) => {\n  const searchParams = new URLSearchParams(params).toString();\n\n  return `${window.location.pathname}?${searchParams}`;\n};\n\nexport const searchParamsToObject = (urlSearchParams) =>\n  [...urlSearchParams.entries()].reduce((params, [key, value]) => {\n    params[key] = value;\n    return params;\n  }, {});\n\nexport const getPagesAmount = (items, perPage) =>\n  Math.ceil(Math.min(MAX_SEARCH_RESULTS, items) / perPage);\n","import { useState, useCallback } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst setError = (status) => {\n  const mapStatusToError = {\n    403: \"You exceeded rate limit 30 request per minute. Please try again later.\",\n    422: \"Only the first 1000 search results are available.\",\n    default: \"Oops! Something went wrong. Please try again later.\",\n  };\n\n  return mapStatusToError[status] || mapStatusToError.default;\n};\n\nconst useFetch = (api, path) => {\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState({});\n  const [errorMessage, setErrorMessage] = useState();\n\n  const fetchData = useCallback(\n    async (params) => {\n      setLoading(true);\n      setErrorMessage(null);\n      if (window.navigator.onLine) {\n        try {\n          const response = await api.get(path, { params });\n\n          ReactDOM.unstable_batchedUpdates(() => {\n            setResponse(response.data);\n            setLoading(false);\n          });\n\n          return response;\n        } catch (error) {\n          setErrorMessage(setError(error.response.status));\n          setLoading(false);\n        }\n      }\n    },\n    [api, path]\n  );\n\n  return { response, errorMessage, loading, fetchData, setResponse };\n};\n\nexport default useFetch;\n","import { useState } from \"react\";\n\nimport { searchParamsToObject } from \"../utils\";\n\nconst isSameParams = (prevParams, params) => {\n  return Object.keys(params).every(\n    (param) => params[param] === prevParams[param]\n  );\n};\n\nconst useUrlParams = (defaultParams) => {\n  const [params, setParams] = useState({\n    ...searchParamsToObject(new URLSearchParams(window.location.search)),\n    ...defaultParams,\n  });\n\n  const updateParams = (params) => {\n    setParams((prevParams) => {\n      if (isSameParams(prevParams, params)) {\n        return prevParams;\n      }\n\n      const newParams = { ...prevParams, ...params };\n      const queryString = new URLSearchParams(Object.entries(newParams));\n\n      window.history.pushState(\n        { params: newParams },\n        null,\n        `${window.location.pathname}?${queryString.toString()}`\n      );\n\n      return newParams;\n    });\n  };\n\n  return { params, updateParams };\n};\n\nexport default useUrlParams;\n","import { useState, useEffect } from \"react\";\n\nconst MAX_CACHE_ENTRIES = 10;\n\nconst useCache = (name) => {\n  const [hasCache, setCache] = useState(false);\n\n  useEffect(() => {\n    if (\"caches\" in window) {\n      setCache(true);\n    }\n  }, []);\n\n  const addCache = async (request, response) => {\n    if (!hasCache) {\n      return;\n    }\n\n    const cache = await window.caches.open(name);\n    const keys = await cache.keys();\n\n    if (keys.length >= MAX_CACHE_ENTRIES) {\n      cache.delete(keys[keys.length - 1]);\n    }\n\n    cache.put(request, new Response(JSON.stringify(response)));\n  };\n\n  const getCache = async (request) => {\n    if (!hasCache) {\n      return null;\n    }\n\n    const cache = await window.caches.open(name);\n    const cachedResponse = await cache.match(request);\n\n    return cachedResponse ? await cachedResponse.json() : null;\n  };\n\n  const getAllCaches = async () => {\n    if (!hasCache) {\n      return [];\n    }\n\n    const cache = await window.caches.open(name);\n\n    return cache ? await cache.keys() : [];\n  };\n\n  return { hasCache, addCache, getCache, getAllCaches };\n};\n\nexport default useCache;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst SearchBar = React.memo(({ onSubmit, value = \"\" }) => {\n  const [searchPhrase, setSearchPhrase] = useState(value);\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    searchPhrase && onSubmit(searchPhrase);\n  };\n\n  const onChange = (event) => {\n    setSearchPhrase(event.target.value);\n  };\n\n  return (\n    <form noValidate autoComplete=\"off\" onSubmit={onFormSubmit}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={9} md={10}>\n          <TextField\n            id=\"seach-field\"\n            label=\"Enter repository name\"\n            type=\"search\"\n            fullWidth\n            variant=\"outlined\"\n            value={searchPhrase}\n            onChange={onChange}\n          />\n        </Grid>\n        <Grid item sm={3} md={2} container alignItems=\"stretch\">\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            fullWidth\n            endIcon={<SearchIcon />}\n          >\n            Find\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n});\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport UISelect from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nlet initailLabelId = 1;\n\nconst Select = ({\n  onChange = () => {},\n  options = [{ value: \"no_value\", label: \"None\" }],\n  defaultOption = 0,\n  label = \"\",\n}) => {\n  const getLabelId = () => {\n    return ++initailLabelId;\n  };\n\n  const labelId = `label-id-${getLabelId()}`;\n\n  return options.length ? (\n    <FormControl fullWidth>\n      <InputLabel shrink variant=\"outlined\" id={labelId}>\n        {label}\n      </InputLabel>\n      <UISelect\n        defaultValue={options[defaultOption].value}\n        type=\"select\"\n        variant=\"outlined\"\n        labelId={labelId}\n        label={label}\n        displayEmpty\n        onChange={onChange}\n      >\n        {options.map(({ value, label }) => (\n          <MenuItem key={value} value={value}>\n            {label}\n          </MenuItem>\n        ))}\n      </UISelect>\n    </FormControl>\n  ) : null;\n};\n\nexport default Select;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { OnlineContext } from \"../context/online-context\";\n\nconst useStyle = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nconst NetworkNotification = ({ hasCache = false }) => {\n  const classes = useStyle();\n  const { isOnline } = useContext(OnlineContext);\n\n  let content;\n\n  if (!isOnline && !hasCache) {\n    content = (\n      <Alert className={classes.alert} severity=\"error\">\n        Please check your internet connection.\n      </Alert>\n    );\n  } else if (!isOnline) {\n    content = (\n      <Alert className={classes.alert} severity=\"warning\">\n        You are working in offline mode. Only previous 10 search requests are\n        available.\n      </Alert>\n    );\n  } else {\n    content = null;\n  }\n\n  return content;\n};\n\nexport default NetworkNotification;\n","import React, { useState } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst Sorting = React.memo(({ options = [], onChange = () => {} }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [label, setLabel] = useState(options[0].label);\n\n  const onButtonClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const onClose = (option) => {\n    setAnchorEl(null);\n  };\n\n  const onSelect = (option) => {\n    setLabel(option.label);\n    onChange(option.order);\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button aria-haspopup=\"true\" onClick={onButtonClick}>\n        Stars: {label}\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={onClose}\n      >\n        {options.map((option) => (\n          <MenuItem\n            key={option.label}\n            onClick={() => {\n              onSelect(option);\n            }}\n          >\n            {option.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n});\n\nexport default Sorting;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconStars from \"@material-ui/icons/Stars\";\nimport IconGithub from \"@material-ui/icons/GitHub\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n  },\n  content: {\n    padding: theme.spacing(1),\n  },\n  stars: {\n    position: \"absolute\",\n    bottom: theme.spacing(1.5),\n    right: theme.spacing(1),\n\n    display: \"flex\",\n    alignItems: \"center\",\n    maxWidth: theme.typography.pxToRem(60),\n\n    fontSize: theme.typography.pxToRem(12),\n  },\n  starsIcon: {\n    marginRight: theme.spacing(0.25),\n  },\n}));\n\nconst RepositoryCard = React.memo(({ repository }) => {\n  const classes = useStyles();\n  const { html_url: url, name, owner, stargazers_count } = repository;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.content}>\n        <Typography color=\"primary\" noWrap>\n          {name}\n        </Typography>\n\n        <Typography className={classes.stars}>\n          <IconStars className={classes.starsIcon} fontSize=\"small\" />\n          {stargazers_count}\n        </Typography>\n\n        <Typography color=\"textSecondary\" variant=\"caption\">\n          Author: {owner.login}\n        </Typography>\n      </CardContent>\n\n      <CardActions>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          href={url}\n          size=\"small\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          endIcon={<IconGithub />}\n        >\n          View on\n        </Button>\n      </CardActions>\n    </Card>\n  );\n});\n\nRepositoryCard.propTypes = {\n  repository: PropTypes.object.isRequired,\n};\n\nexport default RepositoryCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport RepositoryCard from \"./RepositoryCard\";\n\nconst RepositoryList = React.memo(({ repositories }) => {\n  return (\n    <Grid container spacing={2}>\n      {repositories.map((repo) => (\n        <Grid key={repo.id} item xs={12} sm={6} md={4} lg={2}>\n          <RepositoryCard repository={repo} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n});\n\nRepositoryList.propTypes = {\n  repositories: PropTypes.array.isRequired,\n};\n\nexport default RepositoryList;\n","import React, { useContext } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nimport { defaultUrlParam, sortingOptions } from \"../settings\";\nimport { getPagesAmount } from \"../utils\";\n\nimport { OnlineContext } from \"../context/online-context\";\n\nimport Sorting from \"./Sorting\";\nimport RepositoryList from \"./RepositoryList\";\n\nconst useStyle = makeStyles((theme) => ({\n  sectionHeading: {\n    marginBottom: theme.spacing(2),\n    fontSize: theme.typography.pxToRem(18),\n    fontWeight: theme.typography.fontWeightBold,\n  },\n\n  pagination: {\n    marginTop: theme.spacing(2),\n  },\n\n  sorting: {\n    float: \"right\",\n    fontSize: theme.typography.pxToRem(14),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nconst SearchResult = ({\n  onPaging = () => {},\n  onSorting = () => {},\n  currentPage = 1,\n  response = [],\n}) => {\n  const classes = useStyle();\n  const { isOnline } = useContext(OnlineContext);\n  const pageCount = getPagesAmount(\n    response.total_count,\n    defaultUrlParam.per_page\n  );\n\n  return response.total_count > 0 ? (\n    <>\n      {isOnline && (\n        <div className={classes.sorting}>\n          <Sorting options={sortingOptions} onChange={onSorting} />\n        </div>\n      )}\n\n      <Typography className={classes.sectionHeading} variant=\"h2\">\n        Search results\n      </Typography>\n\n      <RepositoryList repositories={response.items} />\n\n      {isOnline && pageCount > 1 && (\n        <Pagination\n          className={classes.pagination}\n          onChange={(event, page) => {\n            onPaging(page);\n          }}\n          count={getPagesAmount(response.total_count, defaultUrlParam.per_page)}\n          color=\"primary\"\n          page={parseInt(currentPage, 10) || 1}\n        />\n      )}\n    </>\n  ) : (\n    <>\n      <Typography className={classes.sectionHeading} variant=\"h2\">\n        Nothing found\n      </Typography>\n    </>\n  );\n};\n\nexport default SearchResult;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport github from \"../api/github\";\nimport { defaultUrlParam, SEARCH_CACHE } from \"../settings\";\nimport { searchParamsToObject, paramsToQueryString } from \"../utils\";\n\nimport useFetch from \"../hooks/useFetch\";\nimport useUrlParams from \"../hooks/useUrlParams\";\nimport useCache from \"../hooks/useCache\";\n\nimport { OnlineContext } from \"../context/online-context\";\n\nimport SearchBar from \"./SearchBar\";\nimport Select from \"./Select\";\nimport NetworkNotification from \"./NetworkNotification\";\nimport SearchResult from \"./SearchResult\";\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(2),\n  },\n\n  h1: {\n    fontSize: theme.typography.pxToRem(28),\n    fontWeight: theme.typography.fontWeightBold,\n  },\n\n  paper: {\n    padding: theme.spacing(2),\n  },\n\n  section: {\n    marginTop: theme.spacing(3),\n  },\n\n  loading: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nconst App = () => {\n  const classes = useStyle();\n  const [cachedRequests, setCachedRequests] = useState([]);\n  const { params, updateParams } = useUrlParams(defaultUrlParam);\n  const { getCache, addCache, getAllCaches } = useCache(SEARCH_CACHE);\n  const { loading, response, errorMessage, fetchData, setResponse } = useFetch(\n    github,\n    \"/search/repositories\"\n  );\n  const { isOnline } = useContext(OnlineContext);\n\n  useEffect(() => {\n    const searchQuery = paramsToQueryString(params);\n\n    (async () => {\n      const cache = await getCache(searchQuery);\n\n      if (cache) {\n        setResponse(cache.data);\n      }\n\n      if (params.q && isOnline) {\n        const fetchedData = await fetchData(params);\n\n        if (fetchedData) {\n          addCache(searchQuery, fetchedData);\n        }\n      }\n    })();\n  }, [params]);\n\n  useEffect(() => {\n    getAllCaches().then((requests) => {\n      setCachedRequests(\n        requests.map((request) => {\n          const url = new URL(request.url);\n          const page = url.searchParams.get(\"page\");\n          const order = url.searchParams.get(\"order\");\n          const query = url.searchParams.get(\"q\");\n\n          return {\n            value: url.searchParams.toString(),\n            label: `${query} (page: ${page}; order: ${order})`,\n            request: request,\n          };\n        })\n      );\n    });\n  }, [isOnline]);\n\n  const onSearch = (searchPhrase) => {\n    updateParams({ q: searchPhrase, page: 1 });\n  };\n\n  const onSorting = (order) => {\n    updateParams({ order: order, page: 1 });\n  };\n\n  const onPageChange = (page) => {\n    updateParams({ page });\n  };\n\n  const onSearchRequestSelect = (event) => {\n    updateParams(searchParamsToObject(new URLSearchParams(event.target.value)));\n  };\n\n  return (\n    <Container className={classes.container} maxWidth=\"lg\">\n      {errorMessage && (\n        <Alert className={classes.alert} severity=\"warning\">\n          {errorMessage}\n        </Alert>\n      )}\n\n      <NetworkNotification hasCache={cachedRequests.length} />\n\n      <Typography className={classes.h1} variant=\"h1\">\n        Find your repo\n      </Typography>\n\n      <Paper className={`${classes.paper} ${classes.section}`}>\n        {isOnline && <SearchBar onSubmit={onSearch} value={params.q || \"\"} />}\n        {!isOnline && (\n          <Select\n            label=\"Previous search requests\"\n            onChange={onSearchRequestSelect}\n            options={cachedRequests}\n          />\n        )}\n      </Paper>\n\n      {loading && (\n        <Backdrop className={classes.loading} open={loading}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      )}\n\n      {!!response.items && (\n        <div className={classes.section}>\n          <SearchResult\n            onPaging={onPageChange}\n            onSorting={onSorting}\n            response={response}\n            currentPage={params.page}\n          />\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport OnlineContextProvider from \"./context/online-context\";\n\nimport App from \"./components/App\";\n\nserviceWorker.register();\n\nReactDOM.render(\n  <OnlineContextProvider>\n    <App />\n  </OnlineContextProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}